apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //support
    api rootProject.ext.support["support-v4"]
    api rootProject.ext.support["appcompat-v7"]
    api rootProject.ext.support["recyclerview-v7"]
    api rootProject.ext.support["design"]
    api rootProject.ext.support["cardview-v7"]
    //rxjava
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid
    //rx管理View的生命周期
    api(rootProject.ext.dependencies.rxlifecycle) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["rxlifecycle-components"]) {
        exclude group: 'com.android.support'
    }
    //rxbinding
    api(rootProject.ext.dependencies.rxbinding) {
        exclude group: 'com.android.support'
    }
    //json解析
    api rootProject.ext.dependencies.gson
    //material-dialogs
    api(rootProject.ext.dependencies["material-dialogs-core"]) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["material-dialogs-commons"]) {
        exclude group: 'com.android.support'
    }
    //glide图片加载库
    api(rootProject.ext.dependencies.glide) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //Google LiveData和ViewModel组件
    api rootProject.ext.dependencies["lifecycle-extensions"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    //EasyHttp
    api(rootProject.ext.dependencies.easyhttp) {
        exclude group: 'com.android.support'
    }
    //EventBus
    api(rootProject.ext.dependencies.eventbus) {
        exclude group: 'com.android.support'
    }
    //CountDownView
    api(rootProject.ext.dependencies.countdownview) {
        exclude group: 'com.android.support'
    }
    //ARouter
    api(rootProject.ext.dependencies["arouter-api"]) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    //AutoSize
    api(rootProject.ext.dependencies["autosize"]) {
        exclude group: 'com.android.support'
    }
    //shape-background
    api(rootProject.ext.dependencies["shape-background"]) {
        exclude group: 'com.android.support'
    }
    //xpopup
    api(rootProject.ext.dependencies["xpopup"]) {
        exclude group: 'com.android.support'
    }
    //switch
    api(rootProject.ext.dependencies["switch"]) {
        exclude group: 'com.android.support'
    }
    //butterknife
    api(rootProject.ext.dependencies["butterknife"]) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude group: 'com.android.support'
    }
    //websocket
    api(rootProject.ext.dependencies["websocket"]) {
        exclude group: 'com.android.support'
    }
    //baserecyclerviewadapterhelper
    api(rootProject.ext.dependencies["baserecyclerviewadapterhelper"]) {
        exclude group: 'com.android.support'
    }
    //baserecyclerviewadapterhelper
    api(rootProject.ext.dependencies["zxingscanner"]) {
        exclude group: 'com.android.support'
    }
    //loading
    api(rootProject.ext.dependencies["loading"]) {
        exclude group: 'com.android.support'
    }
    //agentweb
    api(rootProject.ext.dependencies["agentweb"]) {
        exclude group: 'com.android.support'
    }
    //agentweb
    api(rootProject.ext.dependencies["marqueelibrary"]) {
        exclude group: 'com.android.support'
    }
    //bugly
    api(rootProject.ext.dependencies["bugly"]) {
        exclude group: 'com.android.support'
    }
    //update
    api(rootProject.ext.dependencies["update"]) {
        exclude group: 'com.android.support'
    }
    //magicIndicator
    api(rootProject.ext.dependencies["magicIndicator"]) {
        exclude group: 'com.android.support'
    }
    //mpandroidchart
    api(rootProject.ext.dependencies["mpandroidchart"]) {
        exclude group: 'com.android.support'
    }
}
